{"version":3,"file":"static/js/890.a6e08e27.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","Pages/Movies/Movies.jsx","TMBD/TMBDApi.jsx","components/EditorList/EditorList.styled.jsx","components/EditorList/EditorList.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-item: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  &hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;","import { useState } from 'react';\nimport { SearchForm, Input, Button } from './Form.styled';\n\nconst Form = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\n\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from '../../components/EditorList/EditorList';\nimport Form from 'components/Form/Form';\nimport { fetchSearchByKeyword } from '../../TMBD/TMBDApi';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const queryMovie = searchParams.get('query');\n    if (!queryMovie) return;\n\n    const searchMovies = () => {\n      setLoading(true);\n\n      fetchSearchByKeyword(queryMovie)\n        .then(searchResults => {\n          setSearchFilms(searchResults);\n          setNoMoviesText(searchResults.length === 0);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    searchMovies(searchParams);\n  }, [searchParams]);\n\n  const queryFromParams = searchParams.get('query') || '';\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <main>\n      <Form searchMovies={handleFormSubmit} initialQuery={queryFromParams} />\n      {loading && <Loader />}\n      {noMoviesText && (\n        <p>There is no movies with this request. Please, try again</p>\n      )}\n      {searchFilms && <EditorList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n//336a33d599bf6aff6a2e497c94250ac4","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '336a33d599bf6aff6a2e497c94250ac4';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink } from './EditorList.styled';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default EditorList;\n"],"names":["SearchForm","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","_ref","searchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","event","preventDefault","toLowerCase","children","_jsx","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","queryMovie","get","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","queryFromParams","Form","initialQuery","Loader","EditorList","films","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","List","Item","MovieLink","Link","location","useLocation","map","film","to","id","state","from","title"],"sourceRoot":""}